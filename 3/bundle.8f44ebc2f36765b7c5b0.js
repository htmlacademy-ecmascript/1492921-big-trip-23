(()=>{"use strict";const e="afterbegin";function t(e){const t=document.createElement("div");return t.innerHTML=e,t.firstElementChild}function n(e,t,n="beforeend"){t.insertAdjacentElement(n,e.getElement())}const i=["Everything","Future","Present","Past"],s=["Day","Event","Time","Price","Offers"],a=["Taxi","Bus","Train","Ship","Drive","Flight","Check-in","Sightseeing","Restaurant"],r=[{name:"Amsterdam",description:"Geneva is a city in Switzerland that lies at the southern tip of expansive Lac Léman (Lake Geneva). Surrounded by the Alps and Jura mountains, the city has views of dramatic Mont Blanc."},{name:"Geneva",description:""},{name:"Chamonix",description:"Chamonix-Mont-Blanc (usually shortened to Chamonix) is a resort area near the junction of France, Switzerland and Italy. At the base of Mont Blanc, the highest summit in the Alps, it's renowned for its skiing."}],l=[{code:"luggage",name:"Add luggage",price:50},{code:"comfort",name:"Switch to comfort",price:80},{code:"meal",name:"Add meal",price:15},{code:"seats",name:"Choose seats",price:5},{code:"train",name:"Travel by train",price:40}],o=[{eventType:"Taxi",destination:"Amsterdam",timeStart:"2019-03-18T10:30",timeEnd:"2019-03-18T11:00",price:20,offers:[{name:"Order Uber",price:20}],favorite:!0},{eventType:"Drive",destination:"Chamonix",timeStart:"2019-03-18T14:30",timeEnd:"2019-03-18T16:05",price:160,offers:[{name:"Rent a car",price:200}],favorite:!0},{eventType:"Flight",destination:"Geneva",timeStart:"2019-03-19T18:00",timeEnd:"2019-03-19T19:00",price:20,offers:[{name:"Add luggage",price:30},{name:"Switch to comfort",price:100}],favorite:!1},{eventType:"Sightseeing",destination:"Geneva",timeStart:"2019-03-20T11:15",timeEnd:"2019-03-20T12:15",price:180,offers:[],favorite:!1}],p=e=>new Date(e).toISOString().substring(0,10),c=e=>new Date(e).toISOString().substring(0,16),d=e=>new Date(e).toLocaleDateString("en-US",{month:"short"}).toUpperCase(),v=e=>new Date(e).toLocaleDateString("en-US",{day:"2-digit"}),m=e=>new Date(e).toLocaleTimeString("en-US",{timeStyle:"short",hourCycle:"h24"}),_=e=>new Date(e).toLocaleString("en-GB",{day:"2-digit",month:"2-digit",year:"2-digit",hour:"2-digit",minute:"2-digit"}).replace(", "," ");class h{constructor({points:e,dateTimeStart:t,dateTimeEnd:n,cost:i}){const s=d(t),a=v(t),r=d(n),l=v(n);this.tripInfo={trip:e.join(" &mdash; "),period:`${a}${s===r?"":`&nbsp;${s}`}&nbsp;&mdash;&nbsp;${l}&nbsp;${r}`,cost:i}}getTemplate(){return(({trip:e,period:t,cost:n})=>`\n  <section class="trip-main__trip-info  trip-info">\n    <div class="trip-info__main">\n      <h1 class="trip-info__title">${e}</h1>\n      <p class="trip-info__dates">${t}</p>\n    </div>\n    <p class="trip-info__cost">\n      Total: &euro;&nbsp;<span class="trip-info__cost-value">${n}</span>\n    </p>\n  </section>`)(this.tripInfo)}getElement(){return this.element||(this.element=t(this.getTemplate())),this.element}removeElement(){this.element=null}}class u{constructor(e){this.items=e}getTemplate(){return`\n  <form class="trip-events__trip-sort  trip-sort" action="#" method="get">\n    ${this.items.map((e=>(e=>{const t=e.toLowerCase();return`\n    <div class="trip-sort__item  trip-sort__item--${t}">\n      <input id="sort-${t}" class="trip-sort__input  visually-hidden" type="radio" name="trip-sort" value="sort-${t}">\n      <label class="trip-sort__btn" for="sort-${t}">${e}</label>\n    </div>\n  `})(e))).join("")}\n  </form>\n`}getElement(){return this.element||(this.element=t(this.getTemplate())),this.element}removeElement(){this.element=null}}class f{constructor(e){this.point=e}getTemplate(){return(({eventType:e,destination:t,timeStart:n,timeEnd:i,price:s,offers:a,favorite:r})=>{return`\n  <li class="trip-events__item">\n    <div class="event">\n      <time class="event__date" datetime="${p(n)}">${o=n,new Date(o).toLocaleDateString("en-US",{month:"short",day:"2-digit"}).toUpperCase()}</time>\n      <div class="event__type">\n        <img class="event__type-icon" width="42" height="42" src="img/icons/${e.toLowerCase()}.png" alt="Event type icon">\n      </div>\n      <h3 class="event__title">${e} ${t}</h3>\n      <div class="event__schedule">\n        <p class="event__time">\n          <time class="event__start-time" datetime="${c(n)}">${m(n)}</time>\n          &mdash;\n          <time class="event__end-time" datetime="${c(i)}">${m(i)}</time>\n        </p>\n        <p class="event__duration">${((e,t)=>{if(p(e)!==p(t))throw"Начало и окончание одного события должно быть в один день!";const n=new Date(new Date(t)-new Date(e)),i=`${n.toISOString().substring(11,13)}H `;return`${"00H "===i?"":i}${n.toISOString().substring(14,16)}M`})(n,i)}</p>\n      </div>\n      <p class="event__price">\n        &euro;&nbsp;<span class="event__price-value">${s}</span>\n      </p>\n      ${l=a,`\n  <h4 class="visually-hidden">Offers:</h4>\n  <ul class="event__selected-offers">\n    ${l.map((e=>(({name:e,price:t})=>`\n  <li class="event__offer">\n    <span class="event__offer-title">${e}</span>\n    &plus;&euro;&nbsp;\n    <span class="event__offer-price">${t}</span>\n  </li>\n`)(e))).join("")}\n  </ul>\n`}\n      <button class="event__favorite-btn${r?' event__favorite-btn--active"':'"'} type="button">\n        <span class="visually-hidden">Add to favorite</span>\n        <svg class="event__favorite-icon" width="28" height="28" viewBox="0 0 28 28">\n          <path d="M14 21l-8.22899 4.3262 1.57159-9.1631L.685209 9.67376 9.8855 8.33688 14 0l4.1145 8.33688 9.2003 1.33688-6.6574 6.48934 1.5716 9.1631L14 21z"/>\n        </svg>\n      </button>\n      <button class="event__rollup-btn" type="button">\n        <span class="visually-hidden">Open event</span>\n      </button>\n    </div>\n  </li>`;var l,o})(this.point)}getElement(){return this.element||(this.element=t(this.getTemplate())),this.element}removeElement(){this.element=null}}class g{constructor(e,t,n,i){this.point=e,this.eventTypeList=t,this.destinationList=n,this.offerList=i}getTemplate(){return(({eventType:e,destination:t,timeStart:n,timeEnd:i,price:s,offers:a},r,l,o)=>{return`\n  <li class="trip-events__item">\n    <form class="event event--edit" action="#" method="post">\n      <header class="event__header">\n        <div class="event__type-wrapper">\n          <label class="event__type  event__type-btn" for="event-type-toggle-1">\n            <span class="visually-hidden">Choose event type</span>\n            <img class="event__type-icon" width="17" height="17" src="img/icons/${e.toLowerCase()}.png" alt="Event type icon">\n          </label>\n          <input class="event__type-toggle  visually-hidden" id="event-type-toggle-1" type="checkbox">\n          ${p=r,`\n  <div class="event__type-list">\n    <fieldset class="event__type-group">\n      <legend class="visually-hidden">Event type</legend>\n        ${p.map((e=>(e=>{const t=e.toLowerCase();return`<div class="event__type-item">\n    <input id="event-type-${t}-1" class="event__type-input  visually-hidden" type="radio" name="event-type" value="${t}">\n    <label class="event__type-label  event__type-label--${t}" for="event-type-${t}-1">${e}</label>\n  </div>`})(e))).join("")}\n    </fieldset>\n  </div>\n`}\n        </div>\n\n        <div class="event__field-group  event__field-group--destination">\n          <label class="event__label  event__type-output" for="event-destination-1">\n            ${e}\n          </label>\n          <input class="event__input  event__input--destination" id="event-destination-1" type="text" name="event-destination" value="${t}" list="destination-list-1">\n          <datalist id="destination-list-1">\n            ${l.map((e=>`<option value="${e.name}"></option>`)).join("")}\n          </datalist>\n        </div>\n\n        <div class="event__field-group  event__field-group--time">\n          <label class="visually-hidden" for="event-start-time-1">From</label>\n          <input class="event__input  event__input--time" id="event-start-time-1" type="text" name="event-start-time" value="${_(n)}">\n          &mdash;\n          <label class="visually-hidden" for="event-end-time-1">To</label>\n          <input class="event__input  event__input--time" id="event-end-time-1" type="text" name="event-start-time" value="${_(i)}">\n        </div>\n\n        <div class="event__field-group  event__field-group--price">\n          <label class="event__label" for="event-price-1">\n            <span class="visually-hidden">Price</span>\n            &euro;\n          </label>\n          <input class="event__input  event__input--price" id="event-price-1" type="text" name="event-price" value="${s}">\n        </div>\n\n        <button class="event__save-btn  btn  btn--blue" type="submit">Save</button>\n        <button class="event__reset-btn" type="reset">Delete</button>\n        <button class="event__rollup-btn" type="button">\n          <span class="visually-hidden">Open event</span>\n        </button>\n      </header>\n\n      <section class="event__details">\n        ${((e,t)=>`\n  <section class="event__section  event__section--offers">\n    <h3 class="event__section-title  event__section-title--offers">Offers</h3>\n    <div class="event__available-offers">\n      ${e.map((e=>(({code:e,name:t,price:n},i)=>`\n  <div class="event__offer-selector">\n    <input class="event__offer-checkbox  visually-hidden" id="event-offer-${e}-1" type="checkbox" name="event-offer-${e}" ${i?"checked":""}>\n    <label class="event__offer-label" for="event-offer-${e}-1">\n      <span class="event__offer-title">${t}</span>\n      &plus;&euro;&nbsp;\n      <span class="event__offer-price">${n}</span>\n    </label>\n  </div>\n`)(e,void 0!==t.find((t=>t.name===e.name))))).join("")}\n    </div>\n  </section>\n`)(o,a)}\n        ${((e,t)=>{const n=t.find((t=>t.name===e)).description;return n?`\n      <section class="event__section  event__section--destination">\n        <h3 class="event__section-title  event__section-title--destination">Destination</h3>\n        <p class="event__destination-description">${n}</p>\n      </section>`:""})(t,l)}\n      </section>\n    </form>\n  </li>\n`;var p})(this.point,this.eventTypeList,this.destinationList,this.offerList)}getElement(){return this.element||(this.element=t(this.getTemplate())),this.element}removeElement(){this.element=null}}class y{constructor(e){this.items=e}getTemplate(){return`\n  <div class="trip-controls__filters">\n    <h2 class="visually-hidden">Filter events</h2>\n    <form class="trip-filters" action="#" method="get">\n      ${this.items.map((e=>(e=>{const t=e.toLowerCase();return`\n    <div class="trip-filters__filter">\n      <input id="filter-${t}" class="trip-filters__filter-input  visually-hidden" type="radio" name="trip-filter" value="${t}">\n      <label class="trip-filters__filter-label" for="filter-${t}">${e}</label>\n    </div>\n  `})(e))).join("")}\n      <button class="visually-hidden" type="submit">Accept filter</button>\n    </form>\n  </div>\n`}getElement(){return this.element||(this.element=t(this.getTemplate())),this.element}removeElement(){this.element=null}}(new class{constructor(){this.tripMain=document.querySelector(".trip-main"),this.tripFilters=this.tripMain.querySelector(".trip-controls__filters"),this.tripPoints=document.createElement("ul"),this.tripPoints.classList.add("trip-events__list"),document.querySelector(".trip-events").append(this.tripPoints)}renderTripInfo(){n(new h({points:Array.from(new Set(o.map((e=>e.destination)))),dateTimeStart:o[0].timeStart,dateTimeEnd:o[o.length-1].timeEnd,cost:o.reduce(((e,t)=>e+t.price+t.offers.reduce(((e,t)=>e+t.price),0)),0)}),this.tripMain,e)}renderFiltres(){n(new y(i),this.tripFilters)}renderSorting(){n(new u(s),this.tripPoints,e)}renderEditPoint(e){n(new g(e,a,r,l),this.tripPoints)}renderPoints(){o.forEach(((e,t)=>{1===t?this.renderEditPoint(e):n(new f(e),this.tripPoints)}))}init(){this.renderTripInfo(),this.renderFiltres(),this.renderSorting(),this.renderPoints()}}).init()})();
//# sourceMappingURL=bundle.8f44ebc2f36765b7c5b0.js.map